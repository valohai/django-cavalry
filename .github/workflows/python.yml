name: build
"on":
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: "3.8"
            DJANGO: "django>=2.0,<3"
          - python-version: "3.8"
            DJANGO: "django>=3.0,<4"
          - python-version: "3.10"
            DJANGO: "django>=4.0,<5"
          - python-version: "3.12"
            DJANGO: "django>=5.0,<6"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
          cache: pip
      - uses: actions/checkout@v4
      - run: "pip install $DJANGO -e .[dev,poster]"
        env:
          DJANGO: "${{ matrix.DJANGO }}"
      - run: py.test -vvv --cov .
      - uses: codecov/codecov-action@v4
        with:
          flags: ${{ matrix.python-version }}-${{ matrix.DJANGO }}
          token: ${{ secrets.CODECOV_TOKEN }}
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v4
      - uses: pre-commit/action@v3.0.1
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v4
      - run: pip install build
      - run: python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - build
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/django-cavalry/
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print-hash: true
